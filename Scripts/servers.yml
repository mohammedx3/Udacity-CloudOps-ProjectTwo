Description: >
    Mohammed Hassan - Project 2

Parameters:
  EnvironmentName:
      Description: The name used for the environment.
      Type: String

Resources:

  ServersSecGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Allow http to hosts and SSH for all servers
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        # - IpProtocol: tcp
        #   FromPort: 22
        #   ToPort: 22
        #   CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        # - IpProtocol: tcp
        #   FromPort: 22
        #   ToPort: 22
        #   CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Server Security Group

  LBSecGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} LoadBlanacer
 
  BastionHost:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0e34e7b9ca0ace12d
      InstanceType: t2.micro
      BlockDeviceMappings:
          - DeviceName: "/dev/sdk"
            Ebs:
              VolumeSize: '10'
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          SubnetId:
            Fn::ImportValue:
              !Sub "${EnvironmentName}-PUB1-SN"
          GroupSet:
           - !Ref ServersSecGroup 
      # KeyName : basitonKey

  BastionHost2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0e34e7b9ca0ace12d
      InstanceType: t2.micro
      BlockDeviceMappings:
          - DeviceName: "/dev/sdk"
            Ebs:
              VolumeSize: '10'
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          SubnetId:
            Fn::ImportValue:
              !Sub "${EnvironmentName}-PUB2-SN"
          GroupSet:
           - !Ref ServersSecGroup 
      # KeyName : basitonKey
  
  WebAppLB:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups:
        - Ref: LBSecGroup
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Load Balancer

  ProfileWithRolesForOurApp:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - S3Readl

  WebAppLaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo service ssh start
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          sudo aws s3 cp s3://project2bucketudacity/index.html .
      ImageId: ami-003634241a8fcdec0
      SecurityGroups:
        - Ref: ServersSecGroup
      IamInstanceProfile:
        Ref: ProfileWithRolesForOurApp
      InstanceType: t3a.medium
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: '10'
      # KeyName : private-servers-key
      

  WebAppGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: '4'
      MaxSize: '6'
      TargetGroupARNs:
        - Ref: WebAppTargetGroup

  Listener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions: 
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
      LoadBalancerArn: 
        Ref: WebAppLB
      Port: '80' 
      Protocol: HTTP 
  ALBListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions: 
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
      Conditions: 
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref 'Listener' 
      Priority: 1 
  WebAppTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 35
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 5
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"
  
Outputs:
  WebAppLB:
    Description: The load balancer URL
    Value: !Join ["", ["http://", !GetAtt WebAppLB.DNSName,]]
    Export:
      Name: !Sub ${EnvironmentName}-DNS-NAME